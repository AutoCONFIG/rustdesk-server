#!/bin/sh /etc/rc.common

USE_PROCD=1
START=95
STOP=5

CONF="rustdesk-server"

# 合并连续的端口为范围
combine_ports() {
	local ports=($@)
	local result=""
	local start=""
	local end=""

	# 遍历所有端口，找出连续的端口范围
	for port in "${ports[@]}"; do
		if [ -z "$start" ]; then
			# 如果 start 为空，初始化为当前端口
			start=$port
			end=$port
		elif [ $((end + 1)) -eq $port ]; then
			# 如果当前端口是连续的，更新 end
			end=$port
		else
			# 如果当前端口不连续，记录之前的连续范围并重置 start 和 end
			if [ "$start" -eq "$end" ]; then
				result="$result$start "
			else
				result="$result$start-$end "
			fi
			start=$port
			end=$port
		fi
	done

	# 最后处理剩余的连续端口范围
	if [ "$start" -eq "$end" ]; then
		result="$result$start"
	else
		result="$result$start-$end"
	fi

	echo $result
}

load_config() {
	config_load "$CONF"

	config_get_bool _enabled "rustdesk" "enabled" "0"
	[ "$_enabled" -eq "1" ] || return 1

	config_get _workdir "rustdesk" "workdir"
	config_get_bool _auto_fw "rustdesk" "auto_fw" "1"
	config_get_bool _web_client "rustdesk" "web_client" "0"

	config_get _hbbs_enabled "hbbs" "enabled" "1"
	config_get _hbbs_port "hbbs" "port" "21116"
	config_get _hbbr_enabled "hbbr" "enabled" "1"
	config_get _hbbr_port "hbbr" "port" "21117"

	if [ "$_web_client" -eq "0" ]; then
		HBBS_TCP_PORTS="$((_hbbs_port - 1))-$_hbbs_port"  # 21115-21116
		HBBR_TCP_PORTS="$_hbbr_port"  # 21117
	else
		HBBS_TCP_PORTS="$((_hbbs_port - 1))-$_hbbs_port $((_hbbs_port + 2))"  # 21115-21116 21118
		HBBR_TCP_PORTS="$_hbbr_port $((_hbbs_port + 2))"  # 21117 21119
	fi

	# 将所有的 TCP 端口合并并优化为范围形式
	TCP_PORTS=$(combine_ports $HBBS_TCP_PORTS $HBBR_TCP_PORTS)
	UDP_PORTS="$_hbbs_port"  # 21116
}

check_firewall_rule_exists() {
  local rule_name=$1
  local port_range=$2
  local cnt=0
  while [ -n "$(uci -q get firewall.@rule[$cnt].name)" ]; do
    local name=$(uci -q get firewall.@rule[$cnt].name)
    local port=$(uci -q get firewall.@rule[$cnt].dest_port)
    if [ "$name" = "$rule_name" ] && [ "$port" = "$port_range" ]; then
      return 0
    fi
    cnt=$((cnt + 1))
  done
  return 1
}

setup_firewall() {
	if ! check_firewall_rule_exists "rustdesk-server-tcp" "$TCP_PORTS"; then
		procd_open_data
		json_add_array firewall
			json_add_object ""
			json_add_string type rule
			json_add_string name "rustdesk-server-tcp"
			json_add_string proto tcp
			json_add_string src "wan"
			json_add_string dest_port "$TCP_PORTS"
			json_add_string target ACCEPT
			json_close_object
		json_close_array
		procd_close_data

	if ! check_firewall_rule_exists "rustdesk-server-udp" "$UDP_PORTS"; then
		procd_open_data
		json_add_array firewall
			json_add_object ""
			json_add_string type rule
			json_add_string name "rustdesk-server-tcp"
			json_add_string proto udp
			json_add_string src "wan"
			json_add_string dest_port "$UDP_PORTS"
			json_add_string target ACCEPT
			json_close_object
		json_close_array
		procd_close_data
}

start_service() {
	load_config

	# 启动服务之前检查是否启用
	[ "$_enabled" -eq "1" ] || return 1

	# 确保工作目录存在
	if ! mkdir -p "$_workdir"; then
		logger -p daemon.err -t "$CONF" "Failed to create working directory: $_workdir"
		return 1
	fi

	# 设置防火墙
	[ "$_auto_fw" -eq "1" ] || setup_firewall

	if [ "$_hbbs_enabled" -eq "1" ]; then
		procd_open_instance "$CONF.server"
		procd_set_param command sh -c "cd $_workdir && /usr/bin/hbbs"
		procd_set_param respawn
		procd_close_instance
		logger -p daemon.info -t "$CONF" "Started hbbs on ports $HBBS_TCP_PORTS (TCP) and $HBBS_UDP_PORTS (UDP)"
	fi

	if [ "$_hbbr_enabled" -eq "1" ]; then
		procd_open_instance "$CONF.relay"
		procd_set_param command sh -c "cd $_workdir && /usr/bin/hbbr"
		procd_set_param respawn
		procd_close_instance
		logger -p daemon.info -t "$CONF" "Started hbbr on ports $HBBR_TCP_PORTS"
	fi
}

stop_service() {
	logger -p daemon.info -t "$CONF" "Stopping RustDesk services."

}

reload_service() {
	logger -p daemon.info -t "$CONF" "Reloading RustDesk services."
	stop_service
	start_service
}

# 添加重启触发器
service_started() {
	procd_set_config_changed firewall
}

service_stopped() {
	procd_set_config_changed firewall
}

service_triggers() {
	procd_add_reload_trigger "$CONF"
}
